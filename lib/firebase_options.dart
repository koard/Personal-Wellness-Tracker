// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'config/env_config.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for ios - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions get android {
    return FirebaseOptions(
      apiKey: EnvConfig.firebaseAndroidApiKey,
      appId: EnvConfig.firebaseAndroidAppId,
      messagingSenderId: EnvConfig.firebaseAndroidMessagingSenderId,
      projectId: EnvConfig.firebaseAndroidProjectId,
      storageBucket: EnvConfig.firebaseAndroidStorageBucket,
    );
  }

  static FirebaseOptions get web {
    return FirebaseOptions(
      apiKey: EnvConfig.firebaseWebApiKey,
      appId: EnvConfig.firebaseWebAppId,
      messagingSenderId: EnvConfig.firebaseWebMessagingSenderId,
      projectId: EnvConfig.firebaseWebProjectId,
      authDomain: EnvConfig.firebaseWebAuthDomain,
      storageBucket: EnvConfig.firebaseWebStorageBucket,
      measurementId: EnvConfig.firebaseWebMeasurementId,
    );
  }
}
